# Generated by Django 5.2.6 on 2025-09-19 18:42

import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ProductSimilarity',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('similarity_score', models.FloatField()),
                ('similarity_type', models.CharField(default='content_based', max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Recommendation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('session_key', models.CharField(blank=True, max_length=50)),
                ('recommendation_type', models.CharField(choices=[('personal', 'Personal Recommendations'), ('trending', 'Trending Products'), ('similar', 'Similar Products'), ('frequently_bought_together', 'Frequently Bought Together'), ('recently_viewed', 'Recently Viewed'), ('category_based', 'Category-Based'), ('seasonal', 'Seasonal')], max_length=30)),
                ('confidence_score', models.FloatField(default=0.0)),
                ('impressions', models.PositiveIntegerField(default=0)),
                ('clicks', models.PositiveIntegerField(default=0)),
                ('conversions', models.PositiveIntegerField(default=0)),
                ('valid_until', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='RecommendationFeedback',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('feedback_type', models.CharField(choices=[('like', 'Like'), ('dislike', 'Dislike'), ('not_interested', 'Not Interested'), ('already_owned', 'Already Owned'), ('too_expensive', 'Too Expensive')], max_length=20)),
                ('comment', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='RecommendationItem',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('score', models.FloatField(help_text='Recommendation score for this product')),
                ('rank', models.PositiveIntegerField(help_text='Position in the recommendation list')),
                ('impressions', models.PositiveIntegerField(default=0)),
                ('clicks', models.PositiveIntegerField(default=0)),
                ('conversions', models.PositiveIntegerField(default=0)),
            ],
            options={
                'ordering': ['rank'],
            },
        ),
        migrations.CreateModel(
            name='RecommendationModel',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100)),
                ('model_type', models.CharField(choices=[('collaborative_filtering', 'Collaborative Filtering'), ('content_based', 'Content-Based'), ('hybrid', 'Hybrid'), ('popularity_based', 'Popularity-Based'), ('matrix_factorization', 'Matrix Factorization')], max_length=30)),
                ('description', models.TextField(blank=True)),
                ('parameters', models.JSONField(default=dict)),
                ('accuracy_score', models.FloatField(blank=True, null=True)),
                ('precision_score', models.FloatField(blank=True, null=True)),
                ('recall_score', models.FloatField(blank=True, null=True)),
                ('f1_score', models.FloatField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=False)),
                ('is_trained', models.BooleanField(default=False)),
                ('training_data_count', models.PositiveIntegerField(default=0)),
                ('model_file_path', models.CharField(blank=True, max_length=500)),
                ('feature_columns', models.JSONField(default=list)),
                ('last_trained_at', models.DateTimeField(blank=True, null=True)),
                ('training_duration', models.DurationField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TrendingProduct',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('daily_score', models.FloatField(default=0.0)),
                ('weekly_score', models.FloatField(default=0.0)),
                ('monthly_score', models.FloatField(default=0.0)),
                ('view_velocity', models.FloatField(default=0.0)),
                ('purchase_velocity', models.FloatField(default=0.0)),
                ('cart_add_velocity', models.FloatField(default=0.0)),
                ('daily_rank', models.PositiveIntegerField(blank=True, null=True)),
                ('weekly_rank', models.PositiveIntegerField(blank=True, null=True)),
                ('monthly_rank', models.PositiveIntegerField(blank=True, null=True)),
                ('last_calculated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-daily_score'],
            },
        ),
        migrations.CreateModel(
            name='UserBehavior',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('session_key', models.CharField(blank=True, max_length=50)),
                ('behavior_type', models.CharField(choices=[('view', 'Product View'), ('cart_add', 'Added to Cart'), ('cart_remove', 'Removed from Cart'), ('purchase', 'Purchase'), ('wishlist_add', 'Added to Wishlist'), ('review', 'Product Review'), ('search', 'Search Query'), ('category_browse', 'Category Browse')], max_length=20)),
                ('object_id', models.CharField(blank=True, max_length=100)),
                ('context_data', models.JSONField(blank=True, default=dict)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('referrer', models.URLField(blank=True)),
                ('weight', models.FloatField(default=1.0, help_text='Importance weight for this behavior')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='UserProductInteraction',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('view_score', models.FloatField(default=0.0)),
                ('cart_score', models.FloatField(default=0.0)),
                ('purchase_score', models.FloatField(default=0.0)),
                ('wishlist_score', models.FloatField(default=0.0)),
                ('review_score', models.FloatField(default=0.0)),
                ('total_score', models.FloatField(default=0.0)),
                ('first_interaction', models.DateTimeField()),
                ('last_interaction', models.DateTimeField()),
                ('interaction_count', models.PositiveIntegerField(default=0)),
            ],
        ),
    ]
